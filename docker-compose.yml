version: "3.9"

services:

  # ********** BACKEND SERVICES ********** #
  sd-postgres:
    container_name: sd-postgres
    image: postgres:14.0-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=starlette
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - TZ=Europe/London
    volumes:
      - sd_postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  sd-backend:
    depends_on:
      - sd-postgres
    container_name: sd-backend
    image: sd-backend
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    env_file: ./backend/.env
    volumes:
      - ./backend/:/app
    ports:
      - "8080:8080"
    command: uvicorn --host 0.0.0.0 --reload --port 8080 api:app
    networks:
      - app-network

    
  # ********** FRONTEND SERVICES ********** #
  sd-frontend:
    container_name: sd-frontend
    image: sd-frontend
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: development
    volumes:
      - ./frontend/:/app
    ports:
      - 3000:3000
    command: ["yarn", "start"]
    networks:
      - app-network

  # sd-frontend-sb:
  #   container_name: sd-frontend-sb
  #   image: sd-frontend-sb
  #   build:
  #     context: ./frontend
  #     dockerfile: ./Dockerfile
  #   environment:
  #     NODE_ENV: development
  #   volumes:
  #     - ./frontend/:/app
  #   ports:
  #     - 6006:6006
  #   command: ["yarn", "storybook"]    
  #   networks:
  #     - app-network

  # ********** INTERMEDIATE SERVICES ********** #
  sd-nginx:
    depends_on:
      - sd-frontend
      - sd-backend
      - sd-certbot
      - sd-wordpress
    container_name: sd-nginx
    env_file: ./nginx/.env
    image: sd-nginx
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    restart: unless-stopped
    volumes:
      - ./media:/media
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - sd_wordpress:/var/www/html
      - ./nginx:/etc/nginx/conf.d
    ports:
      - 80:80
      - 443:443
    networks:
      - app-network
      - wp-metwork

  sd-certbot:
    container_name: sd-certbot
    restart: unless-stopped
    image: certbot/certbot:latest
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - app-network
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


    # ********** LANDING PAGE ********** #
  sd-mysql:
    container_name: sd-mysql
    image: mysql:8.0
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=wordpress
    env_file: ./mysql/.env
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - sd_mysql_data:/var/lib/mysql
    networks:
      - wp-metwork
    ports:
      - 3306:3306

  sd-wordpress:
    depends_on:
      - sd-mysql
    container_name: sd-wordpress
    image: wordpress:5.8.2-fpm-alpine
    restart: unless-stopped
    environment:
      - WORDPRESS_DB_HOST=sd-mysql:3306
    env_file: ./wordpress/.env
    volumes:
      - sd_wordpress:/var/www/html
    networks:
      - wp-metwork

volumes:
  sd_postgres_data:
  sd_wordpress:
  sd_mysql_data:

networks:
  app-network:
    driver: bridge
  wp-metwork:
    driver: bridge
version: "3.9"

services:
  postgres:
    container_name: sd_postgres
    image: postgres # need version number
    restart: unless-stopped
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - TZ=Europe/London
    volumes:
      - sd_postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  backend:
    depends_on:
      - postgres
    container_name: sd_backend
    build:
      context: .
      dockerfile: ./dockerfiles/backend/Dockerfile
    env_file: .env
    environment:
      - TZ=Europe/London
    volumes:
      - ./backend:/src
      - ./log:/log
      - ./nginx:/etc/nginx/sites-available
      - ./uwsgi/vassals:/etc/uwsgi/vassals
      - ./socket:/socket
      - sd_wordpress:/var/www/html
    ports:
      - "8080:8080"
      - "80:80"
      - "443:443"
    networks:
      - app-network
    command: python /src/core/startUp.py
    #command: tail -F anything

  mysql:
    container_name: sd_mysql
    image: mysql:8.0
    restart: unless-stopped
    env_file: .env
    environment:
      - MYSQL_DATABASE=wordpress
    security_opt:
      - seccomp:unconfined
    volumes:
      - sd_mysql_data:/var/lib/mysql # Fixes some bind errors that were happening with mySQL
    command: "--default-authentication-plugin=mysql_native_password"
    networks:
      - app-network

  wordpress:
    depends_on:
      - mysql
      - backend
    container_name: sd_wordpress
    image: wordpress:5.8.0-fpm-alpine
    restart: unless-stopped
    env_file: .env
    environment:
      - WORDPRESS_DB_HOST=mysql:3306
      - WORDPRESS_DB_USER=$MYSQL_USER
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
      - WORDPRESS_DB_NAME=wordpress
    volumes:
      - sd_wordpress:/var/www/html
    networks:
      - app-network

  frontend:
    container_name: sd_frontend
    build:
      context: .
      dockerfile: ./dockerfiles/frontend/Dockerfile
    #restart: unless-stopped
    volumes:
      - ./frontend:/src/frontend
      - ./backend/media:/src/media
      - ./backend/static:/src/static
    networks:
      - app-network
    command: tail -F anything

volumes:
  sd_postgres_data:
  sd_wordpress:
  sd_mysql_data:

networks:
  app-network:
    driver: bridge
